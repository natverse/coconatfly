% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ids.R
\name{cf_ids}
\alias{cf_ids}
\alias{c.cidlist}
\title{Specify ids for fly connectome datasets}
\usage{
cf_ids(
  query = NULL,
  datasets = c("brain", "vnc", "hemibrain", "flywire", "malecns", "manc", "fanc",
    "opticlobe", "banc", "yakubavnc"),
  expand = FALSE,
  keys = FALSE,
  hemibrain = NULL,
  flywire = NULL,
  malecns = NULL,
  manc = NULL,
  fanc = NULL,
  opticlobe = NULL,
  banc = NULL,
  yakubavnc = NULL
)

\method{c}{cidlist}(..., unique = TRUE)
}
\arguments{
\item{query}{A query (e.g. cell type name or regular expression)}

\item{datasets}{Character vector naming datasets to which the \code{query}
should be applied.}

\item{expand}{Whether to expand any queries into the matching ids (this will
involve one or more calls to corresponding servers). Default \code{FALSE}.}

\item{keys}{Whether to turn the ids into keys \code{hb:12345} right away.
Default \code{FALSE} but you may find this useful e.g. for combining lists
of neurons (see examples).}

\item{hemibrain}{Pass hemibrain specific query or ids to this argument}

\item{flywire}{Pass flywire specific query or ids to this argument}

\item{malecns}{Pass malecns specific query or ids to this argument}

\item{manc}{Pass manc specific query or ids to this argument}

\item{fanc}{Pass fanc ids to this argument (at present we do not support
metadata queries for fanc)}

\item{opticlobe}{Pass opticlobe specific query or ids to this argument}

\item{banc}{Pass banc ids to this argument (we only support basic metadata
queries for banc)}

\item{yakubavnc}{Pass yakuba VNC specific query or ids to this argument}

\item{...}{One or more lists generated by \code{cf_ids} that should be joined
together}

\item{unique}{Whether to remove duplicated ids when combining cf_id lists
with \code{c.cidlist}}
}
\value{
A list of ids with additional class \code{cidlist}
}
\description{
Specify ids for fly connectome datasets
}
\details{
You will often want to perform a query, most commonly for a cell
  \emph{type} or cell \emph{class}, rather than specific numeric ids. The
  most flexible way to do this is to use a regular expression (regex) query,
  specified with an initial \code{"/"}.

  All neuprint datasets (hemibrain, malevnc, opticlobe, malecns) use the same
  query syntax although some fields may be dataset specific (see examples).
  The regex syntax for CAVE datasets (flywire, fanc, banc) should be the same
  although you may find some wrinkles because the underlying data stores are
  different. Note that we do not yet translate all the different fields
  across datasets for queries, although this is a goal. For example the
  neuprint/fanc/banc \code{class} field is equivalent to flywire
  \code{super_class}. Similarly the values are not guaranteed to be the same.
  Where flywire uses \code{super_class=="descending")} the manc uses
  \code{class=="descending neuron")}.

  Therefore to find all DNs in these two datasets you will need to do:
  \code{cf_ids(manc='/class:descending.*',
  flywire='/super_class:descending.*')}

  Feel free to \href{https://github.com/natverse/coconatfly/issues}{make an
  issue} if you find something that doesn't feel right or can suggest an improvement.
}
\examples{
\donttest{
cf_ids("DA2_lPN", datasets='brain')
# / introduces a regular expression
cf_ids("/MBON.+", datasets='brain')

# expand query into actual ids
cf_ids("/type:MBON.+", datasets='brain', expand=TRUE)

# return keys directly
cf_ids("/type:MBON.+", keys=TRUE)
# one way of combining separate lists of neurons
hbids=c(264083994, 5813022274)
c(cf_ids("/type:MBON1.+", keys=TRUE), cf_ids(hemibrain = hbids, keys = TRUE))

# now equivalent to
keys(c(cf_ids("/type:MBON1.+"), cf_ids(hemibrain = hbids)))

# queries on classes respecting dataset idiosyncrasies
cf_ids(manc="/class:descend.+", flywire="/super_class:descend.+", expand = TRUE)
}
c(cf_ids(flywire = 1, hemibrain = 2), cf_ids(hemibrain = 1:2, flywire=1:2))
c(cf_ids(flywire = 1, hemibrain = 2), cf_ids(hemibrain = 1:2, flywire=1:2), unique=FALSE)
\donttest{
c(cf_ids(flywire = 1, hemibrain = 2), cf_ids(hemibrain = '/SMP55[0-9]', flywire=1:2))
}
}
\seealso{
Other ids: 
\code{\link{keys}()}
}
\concept{ids}
