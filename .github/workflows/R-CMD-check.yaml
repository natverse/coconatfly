# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    env:
      RETICULATE_MINICONDA_PYTHON_VERSION: "3.10.14"
      GITHUB_PAT: ${{ secrets.GJPAT2 }}
      # GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RGL_USE_NULL: TRUE
      _R_CHECK_DONTTEST_EXAMPLES_: FALSE
      _R_CHECK_TESTS_NLINES_: 0
      NEUPRINT_TOKEN: ${{ secrets.NEUPRINT_TOKEN }}
      CLIO_TOKEN: ${{ secrets.CLIO_TOKEN }}
      FLYWIRE_PRINCIPLES: IAGREETOTHEFLYWIREPRINCIPLES
      CHUNKEDGRAPH_SECRET: ${{ secrets.CHUNKEDGRAPH_SECRET }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::devtools, any::covr, any::pkgdown, catmaid=natverse/rcatmaid, flyconnectome/malecns, any::reticulate
          needs: check, coverage

      - name: Add some R options for later steps
        run: |
          cat("\noptions(fafbseg.use_static_celltypes=TRUE)\n", file = "~/.Rprofile", append = TRUE)
        shell: Rscript {0}
# nb we'll need both data dumps in the vignettes
      - name: Download flywire data
        run: |
          fafbseg::download_flywire_release_data(version=630)
          fafbseg::download_flywire_release_data(version=783)
        shell: Rscript {0}

      - name: Install fafbseg + python
        run: |
          fafbseg::simple_python()
          fafbseg::dr_fafbseg()
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2

      - name: Deploy package
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          Rscript -e 'devtools::install(); pkgdown::deploy_to_branch(new_process = FALSE)'

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
